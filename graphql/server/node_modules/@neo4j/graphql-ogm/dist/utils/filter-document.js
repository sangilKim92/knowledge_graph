"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const merge_1 = require("@graphql-tools/merge");
const excludedDirectives = ["auth", "exclude", "private", "readonly", "writeonly"];
function filterDocument(typeDefs) {
    const merged = merge_1.mergeTypeDefs(Array.isArray(typeDefs) ? typeDefs : [typeDefs]);
    return Object.assign(Object.assign({}, merged), { definitions: merged.definitions.reduce((res, def) => {
            var _a, _b;
            if (def.kind !== "ObjectTypeDefinition" && def.kind !== "InterfaceTypeDefinition") {
                return [...res, def];
            }
            if (["Query", "Subscription", "Mutation"].includes(def.name.value)) {
                return [...res, def];
            }
            return [
                ...res,
                Object.assign(Object.assign({}, def), { directives: (_a = def.directives) === null || _a === void 0 ? void 0 : _a.filter((x) => !excludedDirectives.includes(x.name.value)), fields: (_b = def.fields) === null || _b === void 0 ? void 0 : _b.reduce((r, f) => {
                        var _a;
                        return [
                            ...r,
                            Object.assign(Object.assign({}, f), { directives: (_a = f.directives) === null || _a === void 0 ? void 0 : _a.filter((x) => !excludedDirectives.includes(x.name.value)) }),
                        ];
                    }, []) }),
            ];
        }, []) });
}
exports.default = filterDocument;
//# sourceMappingURL=filter-document.js.map